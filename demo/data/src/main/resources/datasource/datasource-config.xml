<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                           http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<context:property-placeholder location="classpath:jdbc/jdbc.properties"  ignore-unresolvable="true"/>

	<bean id="baseDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${datasorce_jdbc_url}"/>
		<property name="username" value="${datasorce_jdbc_user}"/>
		<property name="password" value="${datasorce_jdbc_password}"/>
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${datasorce_jdbc_initialSize}"/>
		<property name="minIdle" value="${datasorce_jdbc_minIdle}"/>
		<property name="maxActive" value="${datasorce_jdbc_maxActive}"/>
		<!-- 配置获取连接等待超时的时间 -->
      	<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000"/>
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
    	<property name="poolPreparedStatements" value="false" />
    	<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
    	<property name="validationQuery" value="${datasorce_jdbc_validationQuery}"/>
	</bean>

	<bean id="baseJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="baseDataSource" />
		</property>
	</bean>

	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="baseDataSource" />
	</bean>
	
	
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans >