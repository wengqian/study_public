<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"       xmlns:context="http://www.springframework.org/schema/context"       xsi:schemaLocation="http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context-4.0.xsd">    <!-- 读取配置文件信息 -->    <context:property-placeholder ignore-unresolvable="true" location="classpath:properties/redis.properties"/>    <!-- jedis cluster config -->    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">        <!-- 最大连接数 -->        <property name="maxTotal" value="${redis.maxTotal}" />        <!-- 最大空闲连接数 -->        <property name="maxIdle" value="${redis.maxIdle}" />        <!-- 每次释放连接的最大数目 -->        <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />        <!-- 释放连接的扫描间隔（毫秒） -->        <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />        <!-- 连接最小空闲时间 -->        <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />        <!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->        <property name="softMinEvictableIdleTimeMillis" value="${redis.softMinEvictableIdleTimeMillis}" />        <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />        <!-- 在获取连接的时候检查有效性, 默认false -->        <property name="testOnBorrow" value="${redis.testOnBorrow}" />        <!-- 在空闲时检查有效性, 默认false -->        <property name="testWhileIdle" value="${redis.testWhileIdle}" />        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->        <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}" />    </bean>    <!--jedis客户端单机版 -->    <bean id="JedisClient" class="redis.clients.jedis.JedisPool">        <constructor-arg name="host" value="${host}"></constructor-arg>        <constructor-arg name="port" value="${port}"></constructor-arg>        <constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>    </bean></beans>